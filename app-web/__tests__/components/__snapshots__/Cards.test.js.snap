// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Card Component matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Cards
    cards={
      Array [
        Object {
          "description": "description",
          "owner": "bar",
          "repository": "foo",
          "resourcePath": "/",
          "resourceType": null,
          "title": "title",
        },
      ]
    }
    sourcePath=""
    topic="topic"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="TopicContainer"
        >
          <h1>
            topic
          </h1>
        </div>,
        <div
          className="LargeView"
        >
          <Toggle
            cardComponents={
              Array [
                <Default Card Component
                  author=""
                  description="description"
                  image=""
                  owner="bar"
                  repository="foo"
                  resourcePath="/"
                  resourceType={null}
                  title="title"
                />,
              ]
            }
            cardLimits={4}
          />
        </div>,
        <div
          className="MobileView"
        >
          <Toggle
            cardComponents={
              Array [
                <Default Card Component
                  author=""
                  description="description"
                  image=""
                  owner="bar"
                  repository="foo"
                  resourcePath="/"
                  resourceType={null}
                  title="title"
                />,
              ]
            }
            cardLimits={1}
          />
        </div>,
      ],
      "className": "CardsContainer",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h1>
              topic
            </h1>,
            null,
          ],
          "className": "TopicContainer",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "topic",
            },
            "ref": null,
            "rendered": "topic",
            "type": "h1",
          },
          null,
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Toggle
            cardComponents={
              Array [
                <Default Card Component
                  author=""
                  description="description"
                  image=""
                  owner="bar"
                  repository="foo"
                  resourcePath="/"
                  resourceType={null}
                  title="title"
                />,
              ]
            }
            cardLimits={4}
          />,
          "className": "LargeView",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "cardComponents": Array [
              <Default Card Component
                author=""
                description="description"
                image=""
                owner="bar"
                repository="foo"
                resourcePath="/"
                resourceType={null}
                title="title"
              />,
            ],
            "cardLimits": 4,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Toggle
            cardComponents={
              Array [
                <Default Card Component
                  author=""
                  description="description"
                  image=""
                  owner="bar"
                  repository="foo"
                  resourcePath="/"
                  resourceType={null}
                  title="title"
                />,
              ]
            }
            cardLimits={1}
          />,
          "className": "MobileView",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "cardComponents": Array [
              <Default Card Component
                author=""
                description="description"
                image=""
                owner="bar"
                repository="foo"
                resourcePath="/"
                resourceType={null}
                title="title"
              />,
            ],
            "cardLimits": 1,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "section",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="TopicContainer"
          >
            <h1>
              topic
            </h1>
          </div>,
          <div
            className="LargeView"
          >
            <Toggle
              cardComponents={
                Array [
                  <Default Card Component
                    author=""
                    description="description"
                    image=""
                    owner="bar"
                    repository="foo"
                    resourcePath="/"
                    resourceType={null}
                    title="title"
                  />,
                ]
              }
              cardLimits={4}
            />
          </div>,
          <div
            className="MobileView"
          >
            <Toggle
              cardComponents={
                Array [
                  <Default Card Component
                    author=""
                    description="description"
                    image=""
                    owner="bar"
                    repository="foo"
                    resourcePath="/"
                    resourceType={null}
                    title="title"
                  />,
                ]
              }
              cardLimits={1}
            />
          </div>,
        ],
        "className": "CardsContainer",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1>
                topic
              </h1>,
              null,
            ],
            "className": "TopicContainer",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "topic",
              },
              "ref": null,
              "rendered": "topic",
              "type": "h1",
            },
            null,
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Toggle
              cardComponents={
                Array [
                  <Default Card Component
                    author=""
                    description="description"
                    image=""
                    owner="bar"
                    repository="foo"
                    resourcePath="/"
                    resourceType={null}
                    title="title"
                  />,
                ]
              }
              cardLimits={4}
            />,
            "className": "LargeView",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "cardComponents": Array [
                <Default Card Component
                  author=""
                  description="description"
                  image=""
                  owner="bar"
                  repository="foo"
                  resourcePath="/"
                  resourceType={null}
                  title="title"
                />,
              ],
              "cardLimits": 4,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Toggle
              cardComponents={
                Array [
                  <Default Card Component
                    author=""
                    description="description"
                    image=""
                    owner="bar"
                    repository="foo"
                    resourcePath="/"
                    resourceType={null}
                    title="title"
                  />,
                ]
              }
              cardLimits={1}
            />,
            "className": "MobileView",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "cardComponents": Array [
                <Default Card Component
                  author=""
                  description="description"
                  image=""
                  owner="bar"
                  repository="foo"
                  resourcePath="/"
                  resourceType={null}
                  title="title"
                />,
              ],
              "cardLimits": 1,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "section",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
