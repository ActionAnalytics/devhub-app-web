// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ActionGroup Component (card) matches snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ActionGroup
    actions={
      Array [
        Object {
          "actionName": "foo",
          "actionValue": "bar",
          "icon": <i>
            Icon
          </i>,
        },
      ]
    }
    title="Actions"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <h3>
          Actions
        </h3>,
        <ul>
          <Action
            actionName="foo"
            actionValue="bar"
            icon={
              <i>
                Icon
              </i>
            }
            link=""
          />
        </ul>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Actions",
        },
        "ref": null,
        "rendered": "Actions",
        "type": "h3",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Action
              actionName="foo"
              actionValue="bar"
              icon={
                <i>
                  Icon
                </i>
              }
              link=""
            />,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "0",
            "nodeType": "function",
            "props": Object {
              "actionName": "foo",
              "actionValue": "bar",
              "icon": <i>
                Icon
              </i>,
              "link": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "ul",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <h3>
            Actions
          </h3>,
          <ul>
            <Action
              actionName="foo"
              actionValue="bar"
              icon={
                <i>
                  Icon
                </i>
              }
              link=""
            />
          </ul>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Actions",
          },
          "ref": null,
          "rendered": "Actions",
          "type": "h3",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Action
                actionName="foo"
                actionValue="bar"
                icon={
                  <i>
                    Icon
                  </i>
                }
                link=""
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "0",
              "nodeType": "function",
              "props": Object {
                "actionName": "foo",
                "actionValue": "bar",
                "icon": <i>
                  Icon
                </i>,
                "link": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "ul",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
